{"version":3,"sources":["../bower_components/matchHeight/dist/jquery.matchHeight.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","_previousResizeWidth","_updateTimeout","_parse","value","parseFloat","_rows","elements","tolerance","$elements","lastTop","rows","each","$that","top","offset","css","lastRow","length","push","Math","floor","abs","add","_parseOptions","options","opts","byRow","property","target","remove","extend","matchHeight","fn","that","_groups","key","group","not","_apply","version","_throttle","_maintainScroll","_beforeUpdate","_afterUpdate","scrollTop","window","htmlHeight","outerHeight","$hiddenParents","parents","filter","data","attr","display","row","$row","targetHeight","style","verticalPadding","is","_applyDataApi","groups","$this","groupId","_update","event","throttle","type","windowWidth","width","setTimeout","on"],"mappings":"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","file":"matchheight.js","sourcesContent":["/**\n* jquery-match-height 0.7.2 by @liabru\n* http://brm.io/jquery-match-height/\n* License: MIT\n*/\n\n;(function(factory) { // eslint-disable-line no-extra-semi\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        // CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Global\n        factory(jQuery);\n    }\n})(function($) {\n    /*\n    *  internal\n    */\n\n    var _previousResizeWidth = -1,\n        _updateTimeout = -1;\n\n    /*\n    *  _parse\n    *  value parse utility function\n    */\n\n    var _parse = function(value) {\n        // parse value and convert NaN to 0\n        return parseFloat(value) || 0;\n    };\n\n    /*\n    *  _rows\n    *  utility function returns array of jQuery selections representing each row\n    *  (as displayed after float wrapping applied by browser)\n    */\n\n    var _rows = function(elements) {\n        var tolerance = 1,\n            $elements = $(elements),\n            lastTop = null,\n            rows = [];\n\n        // group elements by their top position\n        $elements.each(function(){\n            var $that = $(this),\n                top = $that.offset().top - _parse($that.css('margin-top')),\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\n\n            if (lastRow === null) {\n                // first item on the row, so just push it\n                rows.push($that);\n            } else {\n                // if the row top is the same, add to the row group\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\n                    rows[rows.length - 1] = lastRow.add($that);\n                } else {\n                    // otherwise start a new row group\n                    rows.push($that);\n                }\n            }\n\n            // keep track of the last row top\n            lastTop = top;\n        });\n\n        return rows;\n    };\n\n    /*\n    *  _parseOptions\n    *  handle plugin options\n    */\n\n    var _parseOptions = function(options) {\n        var opts = {\n            byRow: true,\n            property: 'height',\n            target: null,\n            remove: false\n        };\n\n        if (typeof options === 'object') {\n            return $.extend(opts, options);\n        }\n\n        if (typeof options === 'boolean') {\n            opts.byRow = options;\n        } else if (options === 'remove') {\n            opts.remove = true;\n        }\n\n        return opts;\n    };\n\n    /*\n    *  matchHeight\n    *  plugin definition\n    */\n\n    var matchHeight = $.fn.matchHeight = function(options) {\n        var opts = _parseOptions(options);\n\n        // handle remove\n        if (opts.remove) {\n            var that = this;\n\n            // remove fixed height from all selected elements\n            this.css(opts.property, '');\n\n            // remove selected elements from all groups\n            $.each(matchHeight._groups, function(key, group) {\n                group.elements = group.elements.not(that);\n            });\n\n            // TODO: cleanup empty groups\n\n            return this;\n        }\n\n        if (this.length <= 1 && !opts.target) {\n            return this;\n        }\n\n        // keep track of this group so we can re-apply later on load and resize events\n        matchHeight._groups.push({\n            elements: this,\n            options: opts\n        });\n\n        // match each element's height to the tallest element in the selection\n        matchHeight._apply(this, opts);\n\n        return this;\n    };\n\n    /*\n    *  plugin global options\n    */\n\n    matchHeight.version = '0.7.2';\n    matchHeight._groups = [];\n    matchHeight._throttle = 80;\n    matchHeight._maintainScroll = false;\n    matchHeight._beforeUpdate = null;\n    matchHeight._afterUpdate = null;\n    matchHeight._rows = _rows;\n    matchHeight._parse = _parse;\n    matchHeight._parseOptions = _parseOptions;\n\n    /*\n    *  matchHeight._apply\n    *  apply matchHeight to given elements\n    */\n\n    matchHeight._apply = function(elements, options) {\n        var opts = _parseOptions(options),\n            $elements = $(elements),\n            rows = [$elements];\n\n        // take note of scroll position\n        var scrollTop = $(window).scrollTop(),\n            htmlHeight = $('html').outerHeight(true);\n\n        // get hidden parents\n        var $hiddenParents = $elements.parents().filter(':hidden');\n\n        // cache the original inline style\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.data('style-cache', $that.attr('style'));\n        });\n\n        // temporarily must force hidden parents visible\n        $hiddenParents.css('display', 'block');\n\n        // get rows if using byRow, otherwise assume one row\n        if (opts.byRow && !opts.target) {\n\n            // must first force an arbitrary equal height so floating elements break evenly\n            $elements.each(function() {\n                var $that = $(this),\n                    display = $that.css('display');\n\n                // temporarily force a usable display value\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                    display = 'block';\n                }\n\n                // cache the original inline style\n                $that.data('style-cache', $that.attr('style'));\n\n                $that.css({\n                    'display': display,\n                    'padding-top': '0',\n                    'padding-bottom': '0',\n                    'margin-top': '0',\n                    'margin-bottom': '0',\n                    'border-top-width': '0',\n                    'border-bottom-width': '0',\n                    'height': '100px',\n                    'overflow': 'hidden'\n                });\n            });\n\n            // get the array of rows (based on element top position)\n            rows = _rows($elements);\n\n            // revert original inline styles\n            $elements.each(function() {\n                var $that = $(this);\n                $that.attr('style', $that.data('style-cache') || '');\n            });\n        }\n\n        $.each(rows, function(key, row) {\n            var $row = $(row),\n                targetHeight = 0;\n\n            if (!opts.target) {\n                // skip apply to rows with only one item\n                if (opts.byRow && $row.length <= 1) {\n                    $row.css(opts.property, '');\n                    return;\n                }\n\n                // iterate the row and find the max height\n                $row.each(function(){\n                    var $that = $(this),\n                        style = $that.attr('style'),\n                        display = $that.css('display');\n\n                    // temporarily force a usable display value\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                        display = 'block';\n                    }\n\n                    // ensure we get the correct actual height (and not a previously set height value)\n                    var css = { 'display': display };\n                    css[opts.property] = '';\n                    $that.css(css);\n\n                    // find the max height (including padding, but not margin)\n                    if ($that.outerHeight(false) > targetHeight) {\n                        targetHeight = $that.outerHeight(false);\n                    }\n\n                    // revert styles\n                    if (style) {\n                        $that.attr('style', style);\n                    } else {\n                        $that.css('display', '');\n                    }\n                });\n            } else {\n                // if target set, use the height of the target element\n                targetHeight = opts.target.outerHeight(false);\n            }\n\n            // iterate the row and apply the height to all elements\n            $row.each(function(){\n                var $that = $(this),\n                    verticalPadding = 0;\n\n                // don't apply to a target\n                if (opts.target && $that.is(opts.target)) {\n                    return;\n                }\n\n                // handle padding and border correctly (required when not using border-box)\n                if ($that.css('box-sizing') !== 'border-box') {\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\n                }\n\n                // set the height (accounting for padding and border)\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\n            });\n        });\n\n        // revert hidden parents\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.attr('style', $that.data('style-cache') || null);\n        });\n\n        // restore scroll position if enabled\n        if (matchHeight._maintainScroll) {\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\n        }\n\n        return this;\n    };\n\n    /*\n    *  matchHeight._applyDataApi\n    *  applies matchHeight to all elements with a data-match-height attribute\n    */\n\n    matchHeight._applyDataApi = function() {\n        var groups = {};\n\n        // generate groups by their groupId set by elements using data-match-height\n        $('[data-match-height], [data-mh]').each(function() {\n            var $this = $(this),\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\n\n            if (groupId in groups) {\n                groups[groupId] = groups[groupId].add($this);\n            } else {\n                groups[groupId] = $this;\n            }\n        });\n\n        // apply matchHeight to each group\n        $.each(groups, function() {\n            this.matchHeight(true);\n        });\n    };\n\n    /*\n    *  matchHeight._update\n    *  updates matchHeight on all current groups with their correct options\n    */\n\n    var _update = function(event) {\n        if (matchHeight._beforeUpdate) {\n            matchHeight._beforeUpdate(event, matchHeight._groups);\n        }\n\n        $.each(matchHeight._groups, function() {\n            matchHeight._apply(this.elements, this.options);\n        });\n\n        if (matchHeight._afterUpdate) {\n            matchHeight._afterUpdate(event, matchHeight._groups);\n        }\n    };\n\n    matchHeight._update = function(throttle, event) {\n        // prevent update if fired from a resize event\n        // where the viewport width hasn't actually changed\n        // fixes an event looping bug in IE8\n        if (event && event.type === 'resize') {\n            var windowWidth = $(window).width();\n            if (windowWidth === _previousResizeWidth) {\n                return;\n            }\n            _previousResizeWidth = windowWidth;\n        }\n\n        // throttle updates\n        if (!throttle) {\n            _update(event);\n        } else if (_updateTimeout === -1) {\n            _updateTimeout = setTimeout(function() {\n                _update(event);\n                _updateTimeout = -1;\n            }, matchHeight._throttle);\n        }\n    };\n\n    /*\n    *  bind events\n    */\n\n    // apply on DOM ready event\n    $(matchHeight._applyDataApi);\n\n    // use on or bind where supported\n    var on = $.fn.on ? 'on' : 'bind';\n\n    // update heights on load and resize events\n    $(window)[on]('load', function(event) {\n        matchHeight._update(false, event);\n    });\n\n    // throttled update heights on resize events\n    $(window)[on]('resize orientationchange', function(event) {\n        matchHeight._update(true, event);\n    });\n\n});\n"],"sourceRoot":"assets/scripts/"}